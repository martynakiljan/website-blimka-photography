:root {
  --max-width: 1200px;
}

/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include xl-min($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include sm-min($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include md-min($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include lg-min($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include xl-min($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include xs-max($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include sm-max($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include md-max($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include lg-max($print) {

  }
*/
/*
  Usage:
  if $print has no value, @media print won't be used
  if $print has true, @media print will be used
  @include xl-max($print) {

  }
*/
/*
  Usage:
  since word cannot work with media print, the files set the is-not-word variable globally,
  this will ensure that all print things are added in print in pdf.css and print. and all
  word things are not added within print media query.
  @include print {

  }
*/
/*
  Helpers do not use
*/
.menu-desktop {
  display: none;
}
@media screen and (min-width: 992px) {
  .menu-desktop {
    display: block;
  }
}

.menu-mobile {
  display: block;
}
@media screen and (min-width: 992px) {
  .menu-mobile {
    display: none;
  }
}

.menu__list {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.menu-mobile .menu__list {
  z-index: 11;
  background-color: #f1ebe4;
  flex-direction: column;
  position: absolute;
  left: 0;
  right: 0;
  height: 100vh;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}
.menu-mobile.isOpen .menu__list {
  opacity: 1;
  visibility: visible;
}

.menu__list--link {
  font-size: 20px;
  text-transform: uppercase;
  padding: 20px;
}
.menu__list--link:hover {
  text-decoration: underline;
  text-underline-offset: 5px;
}

.menu-mobile .menu__list-item {
  padding: 40px 0;
  border-bottom: 1px solid rgb(36, 37, 39);
  width: calc(100% - 40px);
  margin: 0 auto;
  text-align: center;
}

.menu__logo {
  background-repeat: no-repeat;
  background-size: cover;
  min-width: 300px;
  min-height: 300px;
  background-image: url("../assets/images/logo.png");
}

.menu-mobile__logo {
  background-repeat: no-repeat;
  background-size: cover;
  width: 150px;
  height: 150px;
  background-image: url("../assets/images/logo.png");
  margin: 0 auto;
}

.menu-mobile__inner {
  display: flex;
  justify-content: space-between;
  align-content: center;
  width: 80%;
  margin-left: auto;
  margin-right: 0;
}

.hamburger-react {
  z-index: 111 !important;
  position: absolute !important;
  top: 20px;
  right: 20px;
}/*# sourceMappingURL=menu.css.map */